<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>linux初体验</title>
    <link href="/2025/05/10/linux%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <url>/2025/05/10/linux%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
    
    <content type="html"><![CDATA[<h1 id="WSL、Ubuntu和Vim使用指南"><a href="#WSL、Ubuntu和Vim使用指南" class="headerlink" title="WSL、Ubuntu和Vim使用指南"></a>WSL、Ubuntu和Vim使用指南</h1><p>本文将详细介绍如何在Windows系统中使用WSL（Windows Subsystem for Linux）安装Ubuntu，以及如何使用Vim编辑器进行开发。</p><h2 id="1-WSL安装与配置"><a href="#1-WSL安装与配置" class="headerlink" title="1. WSL安装与配置"></a>1. WSL安装与配置</h2><h3 id="1-1-启用WSL功能"><a href="#1-1-启用WSL功能" class="headerlink" title="1.1 启用WSL功能"></a>1.1 启用WSL功能</h3><p>在Windows中启用WSL功能有两种方式：</p><ol><li>使用PowerShell（管理员权限）：</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">dism.exe /online /<span class="hljs-built_in">enable-feature</span> /featurename:Microsoft<span class="hljs-literal">-Windows-Subsystem-Linux</span> /all /norestart<br>dism.exe /online /<span class="hljs-built_in">enable-feature</span> /featurename:VirtualMachinePlatform /all /norestart<br></code></pre></td></tr></table></figure><ol start="2"><li>通过Windows功能：<ul><li>打开”控制面板”</li><li>进入”程序和功能”</li><li>点击”启用或关闭Windows功能”</li><li>勾选”适用于Linux的Windows子系统”</li></ul></li></ol><h3 id="1-2-安装Ubuntu"><a href="#1-2-安装Ubuntu" class="headerlink" title="1.2 安装Ubuntu"></a>1.2 安装Ubuntu</h3><ol><li><p>从Microsoft Store安装Ubuntu：</p><ul><li>打开Microsoft Store</li><li>搜索”Ubuntu”</li><li>选择最新版本（如Ubuntu 22.04 LTS）</li><li>点击”获取”或”安装”</li></ul></li><li><p>首次启动配置：</p><ul><li>启动Ubuntu</li><li>创建用户名和密码</li><li>等待系统初始化完成</li></ul></li></ol><h2 id="2-Ubuntu基础使用"><a href="#2-Ubuntu基础使用" class="headerlink" title="2. Ubuntu基础使用"></a>2. Ubuntu基础使用</h2><h3 id="2-1-系统更新"><a href="#2-1-系统更新" class="headerlink" title="2.1 系统更新"></a>2.1 系统更新</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 更新软件包列表</span><br><span class="hljs-built_in">sudo</span> apt update<br><br><span class="hljs-comment"># 升级已安装的软件包</span><br><span class="hljs-built_in">sudo</span> apt upgrade<br><br><span class="hljs-comment"># 清理不需要的软件包</span><br><span class="hljs-built_in">sudo</span> apt autoremove<br></code></pre></td></tr></table></figure><h3 id="2-2-常用命令"><a href="#2-2-常用命令" class="headerlink" title="2.2 常用命令"></a>2.2 常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看当前目录</span><br><span class="hljs-built_in">pwd</span><br><br><span class="hljs-comment"># 列出文件</span><br><span class="hljs-built_in">ls</span><br><span class="hljs-built_in">ls</span> -l    <span class="hljs-comment"># 详细信息</span><br><span class="hljs-built_in">ls</span> -a    <span class="hljs-comment"># 显示隐藏文件</span><br><br><span class="hljs-comment"># 切换目录</span><br><span class="hljs-built_in">cd</span> /path/to/directory<br><span class="hljs-built_in">cd</span> ..    <span class="hljs-comment"># 返回上级目录</span><br><span class="hljs-built_in">cd</span> ~     <span class="hljs-comment"># 返回家目录</span><br><br><span class="hljs-comment"># 创建目录</span><br><span class="hljs-built_in">mkdir</span> directory_name<br><br><span class="hljs-comment"># 删除文件/目录</span><br><span class="hljs-built_in">rm</span> file_name<br><span class="hljs-built_in">rm</span> -r directory_name    <span class="hljs-comment"># 递归删除目录</span><br></code></pre></td></tr></table></figure><h2 id="3-Vim编辑器使用"><a href="#3-Vim编辑器使用" class="headerlink" title="3. Vim编辑器使用"></a>3. Vim编辑器使用</h2><h3 id="3-1-安装Vim"><a href="#3-1-安装Vim" class="headerlink" title="3.1 安装Vim"></a>3.1 安装Vim</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt install vim<br></code></pre></td></tr></table></figure><h3 id="3-2-Vim基础操作"><a href="#3-2-Vim基础操作" class="headerlink" title="3.2 Vim基础操作"></a>3.2 Vim基础操作</h3><h4 id="3-2-1-模式切换"><a href="#3-2-1-模式切换" class="headerlink" title="3.2.1 模式切换"></a>3.2.1 模式切换</h4><ul><li>普通模式（默认）：按<code>Esc</code>键</li><li>插入模式：按<code>i</code>键</li><li>可视模式：按<code>v</code>键</li><li>命令模式：按<code>:</code>键</li></ul><h4 id="3-2-2-基本命令"><a href="#3-2-2-基本命令" class="headerlink" title="3.2.2 基本命令"></a>3.2.2 基本命令</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs vim"># 文件操作<br>:<span class="hljs-keyword">w</span>          # 保存文件<br>:q          # 退出<br>:<span class="hljs-keyword">wq</span>         # 保存并退出<br>:q!         # 强制退出不保存<br><br># 光标移动<br>h           # 左移<br><span class="hljs-keyword">j</span>           # 下移<br><span class="hljs-keyword">k</span>           # 上移<br><span class="hljs-keyword">l</span>           # 右移<br><span class="hljs-number">0</span>           # 行首<br>$           # 行尾<br>gg          # 文件开头<br>G           # 文件末尾<br><br># 编辑操作<br>dd          # 删除当前行<br>yy          # 复制当前行<br><span class="hljs-keyword">p</span>           # 粘贴<br><span class="hljs-keyword">u</span>           # 撤销<br>Ctrl+r      # 重做<br></code></pre></td></tr></table></figure><h3 id="3-3-Vim配置"><a href="#3-3-Vim配置" class="headerlink" title="3.3 Vim配置"></a>3.3 Vim配置</h3><p>创建或编辑<code>~/.vimrc</code>文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/.vimrc<br></code></pre></td></tr></table></figure><p>常用配置示例：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-comment">&quot; 显示行号</span><br><span class="hljs-keyword">set</span> <span class="hljs-keyword">number</span><br><br><span class="hljs-comment">&quot; 语法高亮</span><br><span class="hljs-keyword">syntax</span> <span class="hljs-keyword">on</span><br><br><span class="hljs-comment">&quot; 自动缩进</span><br><span class="hljs-keyword">set</span> autoindent<br><br><span class="hljs-comment">&quot; 显示匹配的括号</span><br><span class="hljs-keyword">set</span> showmatch<br><br><span class="hljs-comment">&quot; 搜索时忽略大小写</span><br><span class="hljs-keyword">set</span> ignorecase<br><br><span class="hljs-comment">&quot; 设置缩进为4个空格</span><br><span class="hljs-keyword">set</span> tabstop=<span class="hljs-number">4</span><br><span class="hljs-keyword">set</span> <span class="hljs-built_in">shiftwidth</span>=<span class="hljs-number">4</span><br><span class="hljs-keyword">set</span> expandtab<br><br><span class="hljs-comment">&quot; 显示状态行</span><br><span class="hljs-keyword">set</span> laststatus=<span class="hljs-number">2</span><br><br><span class="hljs-comment">&quot; 设置主题</span><br><span class="hljs-keyword">colorscheme</span> desert<br></code></pre></td></tr></table></figure><h2 id="4-开发环境配置"><a href="#4-开发环境配置" class="headerlink" title="4. 开发环境配置"></a>4. 开发环境配置</h2><h3 id="4-1-安装开发工具"><a href="#4-1-安装开发工具" class="headerlink" title="4.1 安装开发工具"></a>4.1 安装开发工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装编译工具</span><br><span class="hljs-built_in">sudo</span> apt install build-essential<br><br><span class="hljs-comment"># 安装Git</span><br><span class="hljs-built_in">sudo</span> apt install git<br><br><span class="hljs-comment"># 安装Python</span><br><span class="hljs-built_in">sudo</span> apt install python3 python3-pip<br><br><span class="hljs-comment"># 安装Node.js</span><br>curl -fsSL https://deb.nodesource.com/setup_lts.x | <span class="hljs-built_in">sudo</span> -E bash -<br><span class="hljs-built_in">sudo</span> apt install nodejs<br></code></pre></td></tr></table></figure><h3 id="4-2-配置Git"><a href="#4-2-配置Git" class="headerlink" title="4.2 配置Git"></a>4.2 配置Git</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 配置用户名和邮箱</span><br>git config --global user.name <span class="hljs-string">&quot;Your Name&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;your.email@example.com&quot;</span><br><br><span class="hljs-comment"># 生成SSH密钥</span><br>ssh-keygen -t rsa -b 4096<br></code></pre></td></tr></table></figure><h2 id="5-实用技巧"><a href="#5-实用技巧" class="headerlink" title="5. 实用技巧"></a>5. 实用技巧</h2><h3 id="5-1-WSL与Windows文件系统互访"><a href="#5-1-WSL与Windows文件系统互访" class="headerlink" title="5.1 WSL与Windows文件系统互访"></a>5.1 WSL与Windows文件系统互访</h3><ul><li>Windows访问WSL文件：<code>\\wsl$\Ubuntu\</code></li><li>WSL访问Windows文件：<code>/mnt/c/</code></li></ul><h3 id="5-2-Vim插件管理"><a href="#5-2-Vim插件管理" class="headerlink" title="5.2 Vim插件管理"></a>5.2 Vim插件管理</h3><p>推荐使用Vim插件管理器（如vim-plug）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装vim-plug</span><br>curl -fLo ~/.vim/autoload/plug.vim --create-dirs \<br>    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim<br></code></pre></td></tr></table></figure><p>在<code>.vimrc</code>中添加插件：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">call</span> plug#begin(<span class="hljs-string">&#x27;~/.vim/plugged&#x27;</span>)<br>Plug <span class="hljs-string">&#x27;preservim/nerdtree&#x27;</span><br>Plug <span class="hljs-string">&#x27;vim-airline/vim-airline&#x27;</span><br>Plug <span class="hljs-string">&#x27;vim-airline/vim-airline-themes&#x27;</span><br><span class="hljs-keyword">call</span> plug#end()<br></code></pre></td></tr></table></figure><p>安装插件：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">:PlugInstall<br></code></pre></td></tr></table></figure><h2 id="6-常见问题解决"><a href="#6-常见问题解决" class="headerlink" title="6. 常见问题解决"></a>6. 常见问题解决</h2><ol><li><p>WSL启动失败</p><ul><li>检查Windows功能是否启用</li><li>重启WSL：<code>wsl --shutdown</code></li><li>重置WSL：<code>wsl --unregister Ubuntu</code></li></ul></li><li><p>Vim中文乱码</p><ul><li>在<code>.vimrc</code>中添加：</li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">set</span> encoding=utf-<span class="hljs-number">8</span><br><span class="hljs-keyword">set</span> fileencoding=utf-<span class="hljs-number">8</span><br><span class="hljs-keyword">set</span> termencoding=utf-<span class="hljs-number">8</span><br></code></pre></td></tr></table></figure></li><li><p>权限问题</p><ul><li>使用<code>sudo</code>执行需要权限的命令</li><li>修改文件权限：<code>chmod</code></li><li>修改文件所有者：<code>chown</code></li></ul></li></ol><h2 id="7-进阶建议"><a href="#7-进阶建议" class="headerlink" title="7. 进阶建议"></a>7. 进阶建议</h2><ol><li><p>使用WSL2而不是WSL1</p><ul><li>更好的性能</li><li>完整的Linux内核</li><li>更好的系统调用兼容性</li></ul></li><li><p>配置WSL的默认版本</p></li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wsl <span class="hljs-literal">--set-default-version</span> <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><ol start="3"><li><p>使用Windows Terminal</p><ul><li>更好的终端体验</li><li>多标签支持</li><li>自定义主题</li></ul></li><li><p>配置Vim为IDE</p><ul><li>使用插件增强功能</li><li>配置代码补全</li><li>设置代码格式化</li></ul></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>WSL</tag>
      
      <tag>Ubuntu</tag>
      
      <tag>Vim</tag>
      
      <tag>开发环境</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>golang项目部署到云服务器</title>
    <link href="/2025/05/10/golang%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <url>/2025/05/10/golang%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="Golang项目部署到云服务器详细教程"><a href="#Golang项目部署到云服务器详细教程" class="headerlink" title="Golang项目部署到云服务器详细教程"></a>Golang项目部署到云服务器详细教程</h1><p>项目部署到云服务器的过程包括本地编译、文件上传、服务器配置和后台运行等步骤。</p><h2 id="1-本地编译"><a href="#1-本地编译" class="headerlink" title="1. 本地编译"></a>1. 本地编译</h2><p>在Windows环境下，我们需要先配置交叉编译环境，以便生成Linux系统可执行文件：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 配置编译环境</span><br><span class="hljs-built_in">set</span> GOOS=linux  <span class="hljs-comment">#设置编译目标系统为Linux</span><br><span class="hljs-built_in">set</span> GOARCH=amd64 <span class="hljs-comment">#设置编译目标的指令集架构为64位 x86架构</span><br><br><span class="hljs-comment"># 执行编译</span><br>go build <span class="hljs-literal">-o</span> huancuilou  <span class="hljs-comment"># 生成名为huancuilou的可执行文件</span><br></code></pre></td></tr></table></figure><p>编译完成后，会在当前目录生成<code>huancuilou</code>可执行文件。</p><h2 id="2-文件上传"><a href="#2-文件上传" class="headerlink" title="2. 文件上传"></a>2. 文件上传</h2><ol><li>登录宝塔面板</li><li>在文件管理器中找到目标目录（通常是<code>/www/wwwroot/default</code>）</li><li>将编译好的<code>huancuilou</code>文件上传到该目录</li></ol><h2 id="3-服务器配置"><a href="#3-服务器配置" class="headerlink" title="3. 服务器配置"></a>3. 服务器配置</h2><h3 id="3-1-运行程序"><a href="#3-1-运行程序" class="headerlink" title="3.1 运行程序"></a>3.1 运行程序</h3><p>通过SSH连接到服务器，执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 进入项目目录</span><br><span class="hljs-built_in">cd</span> /www/wwwroot/default<br><br><span class="hljs-comment"># 查看文件是否存在</span><br><span class="hljs-built_in">ls</span><br><br><span class="hljs-comment"># 运行程序</span><br>./huancuilou<br></code></pre></td></tr></table></figure><h3 id="3-2-处理端口占用"><a href="#3-2-处理端口占用" class="headerlink" title="3.2 处理端口占用"></a>3.2 处理端口占用</h3><p>如果遇到端口被占用的情况，可以使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看占用端口的进程</span><br>lsof -i:8080<br><br><span class="hljs-comment"># 终止占用端口的进程</span><br><span class="hljs-built_in">kill</span> -9 [进程ID]<br></code></pre></td></tr></table></figure><h2 id="4-配置后台运行"><a href="#4-配置后台运行" class="headerlink" title="4. 配置后台运行"></a>4. 配置后台运行</h2><p>为了确保程序在服务器重启或面板关闭后仍能继续运行，我们需要创建一个后台运行脚本：</p><ol><li>创建运行脚本：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim run.sh<br></code></pre></td></tr></table></figure><ol start="2"><li>在脚本中添加以下内容：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">nohup</span> ./huancuilou &gt;output.log 2&gt;&amp;1 &amp;<br></code></pre></td></tr></table></figure><p>这个命令的含义：</p><ul><li><code>nohup</code>: 使进程忽略所有挂断（SIGHUP）信号</li><li><code>&gt;output.log</code>: 将标准输出重定向到output.log文件</li><li><code>2&gt;&amp;1</code>: 将标准错误也重定向到标准输出</li><li><code>&amp;</code>: 在后台运行</li></ul><ol start="3"><li>保存并退出vim：</li></ol><ul><li>按<code>Esc</code>键确保在英文输入状态</li><li>输入<code>:wq</code>保存并退出</li></ul><ol start="4"><li>给脚本添加执行权限：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> +x run.sh<br></code></pre></td></tr></table></figure><ol start="5"><li>运行脚本：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./run.sh<br></code></pre></td></tr></table></figure><ol start="6"><li>验证程序是否在后台运行：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps -ef | grep huancuilou<br></code></pre></td></tr></table></figure><h2 id="5-注意事项"><a href="#5-注意事项" class="headerlink" title="5. 注意事项"></a>5. 注意事项</h2><ol><li>确保服务器防火墙已开放相应端口</li><li>定期检查日志文件大小，必要时进行日志轮转</li><li>建议配置监控，及时发现程序异常</li><li>重要数据建议配置备份机制</li></ol><h2 id="6-常见问题排查"><a href="#6-常见问题排查" class="headerlink" title="6. 常见问题排查"></a>6. 常见问题排查</h2><ol><li><p>程序无法启动</p><ul><li>检查文件权限</li><li>检查端口占用</li><li>查看错误日志</li></ul></li><li><p>程序意外退出</p><ul><li>检查系统资源使用情况</li><li>查看程序日志</li><li>确认是否有内存泄漏</li></ul></li><li><p>性能问题</p><ul><li>使用<code>top</code>命令监控系统资源</li><li>检查程序日志中的性能相关信息</li><li>考虑是否需要优化代码或增加服务器配置</li></ul></li></ol><h2 id="7-其他部署方式"><a href="#7-其他部署方式" class="headerlink" title="7. 其他部署方式"></a>7. 其他部署方式</h2><p>除了上述直接部署的方式外，还有以下几种常用的部署方案：</p><h3 id="7-1-Docker容器化部署"><a href="#7-1-Docker容器化部署" class="headerlink" title="7.1 Docker容器化部署"></a>7.1 Docker容器化部署</h3><ol><li>创建Dockerfile：</li></ol><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> golang:<span class="hljs-number">1.21</span>-alpine AS builder<br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /app</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> . .</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> go build -o main .</span><br><br><span class="hljs-keyword">FROM</span> alpine:latest<br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /app</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> --from=builder /app/main .</span><br><span class="hljs-keyword">EXPOSE</span> <span class="hljs-number">8080</span><br><span class="hljs-keyword">CMD</span><span class="language-bash"> [<span class="hljs-string">&quot;./main&quot;</span>]</span><br></code></pre></td></tr></table></figure><ol start="2"><li>构建和运行Docker镜像：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 构建镜像</span><br>docker build -t myapp .<br><br><span class="hljs-comment"># 运行容器</span><br>docker run -d -p 8080:8080 myapp<br></code></pre></td></tr></table></figure><p>优点：</p><ul><li>环境隔离，避免依赖冲突</li><li>部署简单，一次构建到处运行</li><li>便于版本管理和回滚</li><li>资源利用率高</li></ul><p>缺点：</p><ul><li>需要学习Docker相关知识</li><li>镜像体积可能较大</li><li>需要额外的Docker环境</li></ul><h3 id="7-2-使用Supervisor进程管理"><a href="#7-2-使用Supervisor进程管理" class="headerlink" title="7.2 使用Supervisor进程管理"></a>7.2 使用Supervisor进程管理</h3><ol><li>安装Supervisor：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt-get install supervisor<br></code></pre></td></tr></table></figure><ol start="2"><li>创建配置文件：</li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[program:myapp]</span><br><span class="hljs-attr">directory</span>=/www/wwwroot/default<br><span class="hljs-attr">command</span>=/www/wwwroot/default/huancuilou<br><span class="hljs-attr">autostart</span>=<span class="hljs-literal">true</span><br><span class="hljs-attr">autorestart</span>=<span class="hljs-literal">true</span><br><span class="hljs-attr">stderr_logfile</span>=/var/log/myapp.err.log<br><span class="hljs-attr">stdout_logfile</span>=/var/log/myapp.out.log<br></code></pre></td></tr></table></figure><ol start="3"><li>启动服务：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">supervisorctl update<br>supervisorctl start myapp<br></code></pre></td></tr></table></figure><p>优点：</p><ul><li>进程管理更专业</li><li>自动重启功能</li><li>日志管理更完善</li><li>可以管理多个进程</li></ul><p>缺点：</p><ul><li>配置相对复杂</li><li>需要额外安装Supervisor</li><li>仅适用于进程管理</li></ul><h3 id="7-3-使用Systemd服务"><a href="#7-3-使用Systemd服务" class="headerlink" title="7.3 使用Systemd服务"></a>7.3 使用Systemd服务</h3><ol><li>创建服务文件：</li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=My Golang Application<br><span class="hljs-attr">After</span>=network.target<br><br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">Type</span>=simple<br><span class="hljs-attr">User</span>=root<br><span class="hljs-attr">WorkingDirectory</span>=/www/wwwroot/default<br><span class="hljs-attr">ExecStart</span>=/www/wwwroot/default/huancuilou<br><span class="hljs-attr">Restart</span>=always<br><br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br></code></pre></td></tr></table></figure><ol start="2"><li>启动服务：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl <span class="hljs-built_in">enable</span> myapp<br>systemctl start myapp<br></code></pre></td></tr></table></figure><p>优点：</p><ul><li>系统级服务管理</li><li>开机自启动</li><li>完善的日志系统</li><li>系统集成度高</li></ul><p>缺点：</p><ul><li>配置相对复杂</li><li>需要root权限</li><li>仅适用于Linux系统</li></ul><h2 id="8-部署方式对比"><a href="#8-部署方式对比" class="headerlink" title="8. 部署方式对比"></a>8. 部署方式对比</h2><table><thead><tr><th>部署方式</th><th>优点</th><th>缺点</th><th>适用场景</th></tr></thead><tbody><tr><td>直接部署</td><td>简单直接，无需额外配置</td><td>进程管理不够完善，重启需要手动操作</td><td>小型项目，快速部署</td></tr><tr><td>Docker部署</td><td>环境隔离，部署简单，便于管理</td><td>需要Docker环境，学习成本较高</td><td>微服务架构，需要环境隔离的项目</td></tr><tr><td>Supervisor</td><td>进程管理专业，自动重启，日志完善</td><td>仅适用于进程管理，配置较复杂</td><td>需要稳定运行的生产环境</td></tr><tr><td>Systemd</td><td>系统级服务管理，开机自启动</td><td>仅适用于Linux，需要root权限</td><td>系统级服务，需要开机自启动的项目</td></tr></tbody></table><h2 id="9-选择建议"><a href="#9-选择建议" class="headerlink" title="9. 选择建议"></a>9. 选择建议</h2><ol><li><p>小型项目或快速原型：</p><ul><li>推荐使用直接部署方式</li><li>简单直接，快速上线</li></ul></li><li><p>微服务架构：</p><ul><li>推荐使用Docker部署</li><li>便于服务管理和扩展</li></ul></li><li><p>生产环境：</p><ul><li>推荐使用Supervisor或Systemd</li><li>提供更完善的进程管理和监控</li></ul></li><li><p>系统服务：</p><ul><li>推荐使用Systemd</li><li>与系统深度集成</li></ul></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>Golang</tag>
      
      <tag>服务器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>校运会备战日志</title>
    <link href="/2025/04/08/%E6%A0%A1%E8%BF%90%E4%BC%9A%E5%A4%87%E6%88%98%E6%97%A5%E5%BF%97/"/>
    <url>/2025/04/08/%E6%A0%A1%E8%BF%90%E4%BC%9A%E5%A4%87%E6%88%98%E6%97%A5%E5%BF%97/</url>
    
    <content type="html"><![CDATA[<p>不要悲观。输出内容的风格是会影响我的日常心情的。</p><p>朋友请看下图：<br><img src="/img/daily/%E8%B7%91%E6%AD%A5%E6%8A%BD%E8%B1%A1%E7%94%BB.jpg" alt="我跑步的优雅姿态"></p><p>男生800米间歇，女生600米，总共五组。女生加上教练来了四个人，训练也比较自由，不过上一次练完，我决定这次要坚持。</p><p>我不理解别人起步立马快我四十米是怎么回事，但是不论我怎么尽力抡两条腿，我就是追不上，所以我不能理解。不过很快我就不考虑这个问题了，因为一股强烈的窒息、酸痛、疲惫、愤怒、怨恨感觉死死扼住了我。我的大脑时刻孜孜不倦地向我汇报：“再跑大脑就要缺氧啦！再跑腿就要酸痛啦！再跑肚子就要剧痛啦，你的膝盖还没好啦，再跑鼻炎就要犯啦，再跑我要吐啦。” </p><p>可惜我太了解自己了，我知道跑完我就会贱兮兮的说毫无感觉，心不跳腿不疼。哕，我知道这是借口，纯懒的，想逃避。我继续跑。教练一骑绝尘，我追不上，所幸每一次冲终点的时候我与她的距离都会缩小。佬l每跑一半会给自己放个假，第一圈快结束我会比较轻松的超过她。佬w是上一届院运会、校运会的跑步王者，她随时随地给自己放假，这一点不影响她是一位强悍的女子，凭她的实力，我丝毫不怀疑赛场上她依然会拿到耀眼的成绩。</p><p>开始我的头还是端放在脖子上的，这时候想提速度追上前面的同学，身体会前倾。一旦我疲惫了，脖子就好像被抽了筋，脑袋就像有千钧重，我觉着自己的后脑勺贴着背，脖子完全不使一分力气，像是一根绳把脑袋挂在了左肩后方，我怀疑因为左边是跑道内侧，所以脑袋始终挂在左侧。这样的脑袋我在霍金的照片上见过。对不起。</p><p>腿是正常驱动的，并不会因为内心的叫嚣与谩骂而放慢，这是一种惯性，快一点慢一点都费力。第五组间歇证明我话说早了，这次慢速晃悠完了个四百米。因为我的两条腿都要抽筋了。这种感觉我熟悉，高中一次体育课我像一只精力旺盛的萨摩耶，笑嘻嘻地、自由自在地奔，最后一圈终点之前两腿一蹬，一屁股坐地上了。坐下时两腿是笔直的，我是从一个180度的平角直接折成的90度直角。站不起来，真是令我颜面扫地。我坐在跑道上，几个同学帮我扳着脚，把筋拉回来。</p><p>我很感谢她们，一点不嫌我鞋底脏，拿手扳着我踩了土的鞋底。没有人大惊小怪，有的人嘴上没什么客套话，但她们真的把这件事当作举手之劳毫不在意。然后我的同学开始聊鞋了，这几个同学人均一双鞋2000到6000。就像没有人把帮人解决抽筋的腿当作对她有恩一样，也没有人在炫耀，就是心平气和的交流，只是一种与收入水平相匹配的消费习惯。哦，这确实能够从氛围、人的言谈举止、表情中看出来。这是令我我认识到高中同学是既有能力又有素质的事情之一。扯远了。</p><p>最后一圈，我慢下来，生怕复现高中那次经历。我把脚踝像夹了板一样固定住，不把脚往后绷，每一步都哄着自己两条腿，“这样，这样跑可以不，别闹，跑完这点就好啦”，就这样支撑着我坚持到最后。</p><p>跑完耳朵里打鼓，不能停下，必须继续向前走，不走酸痛就会趁机顺着腿爬上来，心肺也不适应，立马张牙舞爪要来欺负我。到现在，我鼻炎已经用光一包纸了。</p><p>跑步时，脑子里只有一句话“我恨间歇，我恨跑步”。我知道周四早上六点半我还会去的。</p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日常</tag>
      
      <tag>随笔</tag>
      
      <tag>跑步</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Markdown常用语法指南</title>
    <link href="/2025/04/08/markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
    <url>/2025/04/08/markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/%E6%8A%BD%E8%B1%A12.jpg"></p><h1 id="Markdown常用语法指南"><a href="#Markdown常用语法指南" class="headerlink" title="Markdown常用语法指南"></a>Markdown常用语法指南</h1><blockquote><p>写这篇文章的初衷是记录自己常用的Markdown语法，免得每次都要查。虽然现在有AI，但自己记住一些基础的东西还是很有必要的。</p></blockquote><h2 id="一、基础语法"><a href="#一、基础语法" class="headerlink" title="一、基础语法"></a>一、基础语法</h2><h3 id="1-标题"><a href="#1-标题" class="headerlink" title="1. 标题"></a>1. 标题</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section"># 一级标题</span><br><span class="hljs-section">## 二级标题</span><br><span class="hljs-section">### 三级标题</span><br><span class="hljs-section">#### 四级标题</span><br></code></pre></td></tr></table></figure><h3 id="2-文本格式"><a href="#2-文本格式" class="headerlink" title="2. 文本格式"></a>2. 文本格式</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-emphasis">*斜体*</span> 或 <span class="hljs-emphasis">_斜体_</span><br><span class="hljs-strong">**粗体**</span> 或 <span class="hljs-strong">__粗体__</span><br>~~删除线~~<br><span class="hljs-code">`代码`</span><br></code></pre></td></tr></table></figure><h3 id="3-列表"><a href="#3-列表" class="headerlink" title="3. 列表"></a>3. 列表</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">-</span> 无序列表<br><span class="hljs-bullet">  -</span> 子列表<br><span class="hljs-bullet">  -</span> 子列表<br><span class="hljs-bullet">1.</span> 有序列表<br><span class="hljs-bullet">2.</span> 第二项<br><span class="hljs-bullet">3.</span> 第三项<br></code></pre></td></tr></table></figure><h3 id="4-引用"><a href="#4-引用" class="headerlink" title="4. 引用"></a>4. 引用</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-quote">&gt; 引用内容</span><br>&gt;&gt; 嵌套引用<br></code></pre></td></tr></table></figure><h3 id="5-代码块"><a href="#5-代码块" class="headerlink" title="5. 代码块"></a>5. 代码块</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-code">```python</span><br><span class="hljs-code">def hello():</span><br><span class="hljs-code">    print(&quot;Hello, World!&quot;)</span><br></code></pre></td></tr></table></figure><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs gherkin"><br><span class="hljs-comment">## 二、进阶语法</span><br><br><span class="hljs-comment">### 1. 表格</span><br>```markdown<br>|<span class="hljs-string"> 表头1 </span>|<span class="hljs-string"> 表头2 </span>|<br>|<span class="hljs-string">-------</span>|<span class="hljs-string">-------</span>|<br>|<span class="hljs-string"> 内容1 </span>|<span class="hljs-string"> 内容2 </span>|<br>|<span class="hljs-string"> 内容3 </span>|<span class="hljs-string"> 内容4 </span>|<br></code></pre></td></tr></table></figure><h3 id="2-链接和图片"><a href="#2-链接和图片" class="headerlink" title="2. 链接和图片"></a>2. 链接和图片</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs markdown">[<span class="hljs-string">链接文本</span>](<span class="hljs-link">链接地址</span>)<br>![<span class="hljs-string">图片描述</span>](<span class="hljs-link">图片地址</span>)<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;图片地址&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;50%&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;50%&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;图片描述&quot;</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="3-分割线"><a href="#3-分割线" class="headerlink" title="3. 分割线"></a>3. 分割线</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs markdown">---<br>或<br><span class="hljs-strong">***</span><br><span class="hljs-strong">或</span><br><span class="hljs-strong">__<span class="hljs-emphasis">_</span></span><br></code></pre></td></tr></table></figure><h3 id="4-任务列表"><a href="#4-任务列表" class="headerlink" title="4. 任务列表"></a>4. 任务列表</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">-</span> [ ] 未完成任务<br><span class="hljs-bullet">-</span> [x] 已完成任务<br></code></pre></td></tr></table></figure><h2 id="三、Hexo博客特殊语法"><a href="#三、Hexo博客特殊语法" class="headerlink" title="三、Hexo博客特殊语法"></a>三、Hexo博客特殊语法</h2><h3 id="1-文章头部配置"><a href="#1-文章头部配置" class="headerlink" title="1. 文章头部配置"></a>1. 文章头部配置</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs markdown">---<br>title: 文章标题<br>date: 2024-04-02<br>category: 技术<br>tags: [标签1, 标签2]<br>cover: /img/cover.jpg<br>toc: true<br><span class="hljs-section">mathjax: false</span><br><span class="hljs-section">---</span><br></code></pre></td></tr></table></figure><h3 id="2-图片居中显示"><a href="#2-图片居中显示" class="headerlink" title="2. 图片居中显示"></a>2. 图片居中显示</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;center&quot;</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/img/posts/图片名称.jpg&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;50%&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;图片描述&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="3-图片画廊"><a href="#3-图片画廊" class="headerlink" title="3. 图片画廊"></a>3. 图片画廊</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;gallery-group-main&quot;</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;gallery-group&quot;</span>&gt;</span></span><br><span class="hljs-code">    &lt;div class=&quot;gallery-group-img&quot;&gt;</span><br><span class="hljs-code">      &lt;img src=&quot;/img/posts/图片1.jpg&quot; alt=&quot;图片1&quot;&gt;</span><br><span class="hljs-code">    &lt;/div&gt;</span><br><span class="hljs-code">    &lt;div class=&quot;gallery-group-img&quot;&gt;</span><br><span class="hljs-code">      &lt;img src=&quot;/img/posts/图片2.jpg&quot; alt=&quot;图片2&quot;&gt;</span><br><span class="hljs-code">    &lt;/div&gt;</span><br><span class="hljs-code">  &lt;/div&gt;</span><br><span class="hljs-code">&lt;/div&gt;</span><br></code></pre></td></tr></table></figure><h2 id="四、实用技巧"><a href="#四、实用技巧" class="headerlink" title="四、实用技巧"></a>四、实用技巧</h2><h3 id="1-快捷键"><a href="#1-快捷键" class="headerlink" title="1. 快捷键"></a>1. 快捷键</h3><ul><li>标题：Ctrl + 1~6</li><li>加粗：Ctrl + B</li><li>斜体：Ctrl + I</li><li>引用：Ctrl + Q</li><li>代码块：Ctrl + K</li></ul><h3 id="2-常用组合"><a href="#2-常用组合" class="headerlink" title="2. 常用组合"></a>2. 常用组合</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-quote">&gt; <span class="hljs-strong">**提示：**</span> 这是一个提示框</span><br><span class="hljs-quote">&gt; <span class="hljs-strong">**注意：**</span> 这是一个注意框</span><br><span class="hljs-quote">&gt; <span class="hljs-strong">**警告：**</span> 这是一个警告框</span><br></code></pre></td></tr></table></figure><h3 id="3-数学公式"><a href="#3-数学公式" class="headerlink" title="3. 数学公式"></a>3. 数学公式</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs markdown">$E = mc^2$<br>$$<br>\frac&#123;n!&#125;&#123;k!(n-k)!&#125; = \binom&#123;n&#125;&#123;k&#125;<br>$$<br></code></pre></td></tr></table></figure><h2 id="五、常见问题"><a href="#五、常见问题" class="headerlink" title="五、常见问题"></a>五、常见问题</h2><h3 id="1-转义字符"><a href="#1-转义字符" class="headerlink" title="1. 转义字符"></a>1. 转义字符</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown">\* 这不是斜体 \*<br>\<span class="hljs-code">` 这不是代码 \`</span><br></code></pre></td></tr></table></figure><h3 id="2-空格处理"><a href="#2-空格处理" class="headerlink" title="2. 空格处理"></a>2. 空格处理</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-literal">&amp;nbsp;</span>  # 不换行空格<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span></span>    # 换行<br></code></pre></td></tr></table></figure><h3 id="3-特殊字符"><a href="#3-特殊字符" class="headerlink" title="3. 特殊字符"></a>3. 特殊字符</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-literal">&amp;copy;</span>  # 版权符号<br><span class="hljs-literal">&amp;reg;</span>   # 注册商标<br><span class="hljs-literal">&amp;trade;</span> # 商标<br></code></pre></td></tr></table></figure><h2 id="六、个人经验"><a href="#六、个人经验" class="headerlink" title="六、个人经验"></a>六、个人经验</h2><p>没什么想说的，死脑子总是忘<br>AI真好使，后记是他AI自己发挥的。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><blockquote><p>写这篇文章的时候，我发现自己对Markdown的了解其实很有限。很多高级功能都没用过，比如数学公式、任务列表等。不过没关系，先记住常用的，其他的需要时再查。</p></blockquote><blockquote><p>就像建站一样，不要追求完美，先写出来再说。这篇文章可能不够全面，但对我来说已经够用了。以后遇到新的语法，再补充就是了。</p></blockquote><blockquote><p>最后，希望这篇文章能帮助到和我一样在写博客的朋友。如果有什么错误或遗漏的地方，欢迎指出。</p></blockquote><p><img src="/img/%E7%AA%97%E5%A4%96%E8%93%9D%E5%A4%A9%E4%B8%8E%E7%BB%BF%E6%A0%91.jpg"></p><hr><pre><code class="hljs"></code></pre>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Markdown</tag>
      
      <tag>写作</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>分布式生命游戏系统</title>
    <link href="/2025/04/08/%E5%88%86%E5%B8%83%E5%BC%8F%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/"/>
    <url>/2025/04/08/%E5%88%86%E5%B8%83%E5%BC%8F%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="从零构建分布式生命游戏系统"><a href="#从零构建分布式生命游戏系统" class="headerlink" title="从零构建分布式生命游戏系统"></a>从零构建分布式生命游戏系统</h1><blockquote><p>应聘一个线上实习，面试官给了一个项目让我实现。根据项目的完成情况评级给工资。我大写特写。清明假期回家，学不了一点。说来也巧，在高铁站同事感叹AI强大，强烈建议我试试cursor。果然好使，就当用这个项目练习与AI合作了。开发时长可以算作两天，hr的回复是“看完了，暂时给你100分！”。意思是我的工资每天100。我相当满意。</p></blockquote><blockquote><p>AI开发经验会在另一篇博客里展示。</p></blockquote><h2 id="项目概述"><a href="#项目概述" class="headerlink" title="项目概述"></a>项目概述</h2><blockquote><p>下面是面试官给出的题目</p></blockquote><p>使用 Go 语言实现 John Conway 的经典元胞自动机“生命游戏”</p><h3 id="技术细节"><a href="#技术细节" class="headerlink" title="技术细节:"></a>技术细节:</h3><ul><li>采用RPC架构，将客户端与服务端模块化分离，引入Broker进行高效通信，实现了任务的分发与结果聚合</li><li>采用连接池与异步IO模型优化通信效率, 提升了系统的并发处理能力。利用了Go语言的goroutine与channel特性，实现了高并发、低延迟的通信机制</li><li>通过Go语言的高效内存管理与并发模型，优化了生命游戏的核心算法，能够快速处理大规模矩阵的演化计算。实现了矩阵的周期性边界条件，支持闭环域内的无缝连接，确保了仿真的准确性</li><li>模拟了复杂、确定性系统（如生命游戏）的演化过程，展示了并行计算在科学模拟中的潜力。通过实验结果可视化，提供直观的演化动态</li><li>将服务端与Broker部署在AWS云平台上，利用其弹性计算资源，实现了系统的高可用性与负载均衡</li></ul><h3 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h3><p>下面我先来拆解这道题目。</p><ol><li><p><strong>基础功能需求</strong></p><ul><li>实现John Conway的生命游戏规则</li><li>支持大规模矩阵计算</li><li>实现周期性边界条件</li><li>提供演化过程可视化</li></ul></li><li><p><strong>技术架构需求</strong></p><ul><li>采用RPC架构</li><li>实现分布式通信</li><li>支持高并发处理</li><li>具备负载均衡能力</li></ul></li></ol><p>这里有几个我不熟悉的技术，grpc没有使用过，分布式理解并不透彻，矩阵计算、周期性边界、康威游戏规则是需要查资料了解的。</p><h3 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h3><p>我除了可视化实现和AWS部署都实现了。</p><h2 id="2-系统架构设计"><a href="#2-系统架构设计" class="headerlink" title="2. 系统架构设计"></a>2. 系统架构设计</h2><h3 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a>核心概念</h3><ul><li><p>Broker（代理节点）：任务调度中心</p></li><li><p>Worker（工作节点）：计算执行单元</p></li><li><p>Client（客户端）：任务提交和结果获取</p></li><li><p>Task（任务）：计算单元</p></li><li><p>Node（节点）：物理计算资源</p></li></ul><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><ul><li>整体架构图</li><li>数据流程图 <figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">C<span class="hljs-function"><span class="hljs-title">lient</span> -&gt;</span> B<span class="hljs-function"><span class="hljs-title">roker</span> -&gt;</span> W<span class="hljs-function"><span class="hljs-title">orker</span> -&gt;</span> B<span class="hljs-function"><span class="hljs-title">roker</span> -&gt;</span> Client<br></code></pre></td></tr></table></figure><ul><li>任务分发：Client -&gt; Broker -&gt; Worker</li><li>结果聚合：Worker -&gt; Broker -&gt; Client</li><li>状态同步：Worker -&gt; Broker</li></ul></li><li>组件交互图</li></ul><h2 id="3-核心功能实现"><a href="#3-核心功能实现" class="headerlink" title="3. 核心功能实现"></a>3. 核心功能实现</h2><h3 id="任务调度系统"><a href="#任务调度系统" class="headerlink" title="任务调度系统"></a>任务调度系统</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-comment">// 任务结构</span><br><span class="hljs-keyword">type</span> Task <span class="hljs-keyword">struct</span> &#123;<br>    ID        <span class="hljs-type">string</span><br>    Grid      [][]<span class="hljs-type">bool</span><br>    Generations <span class="hljs-type">int</span><br>    Status    TaskStatus<br>    Result    [][]<span class="hljs-type">bool</span><br>    CreatedAt time.Time<br>&#125;<br><br><span class="hljs-comment">// 调度器实现</span><br><span class="hljs-keyword">type</span> Scheduler <span class="hljs-keyword">struct</span> &#123;<br>    tasks     <span class="hljs-keyword">chan</span> Task<br>    workers   <span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]*Worker<br>    mu        sync.RWMutex<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h3><ul><li>权重计算</li><li>节点选择</li><li>动态调整</li></ul><h3 id="并发控制"><a href="#并发控制" class="headerlink" title="并发控制"></a>并发控制</h3><ul><li>锁机制</li><li>资源管理</li><li>任务队列</li></ul><h2 id="经验总结"><a href="#经验总结" class="headerlink" title="经验总结"></a>经验总结</h2><h3 id="技术收获"><a href="#技术收获" class="headerlink" title="技术收获"></a>技术收获</h3><ul><li>Go语言实践</li><li>分布式系统设计</li></ul><h3 id="项目反思"><a href="#项目反思" class="headerlink" title="项目反思"></a>项目反思</h3><ul><li>设计决策回顾</li><li>改进方向</li><li>经验教训</li></ul><h2 id="未来展望"><a href="#未来展望" class="headerlink" title="未来展望"></a>未来展望</h2><h3 id="功能扩展"><a href="#功能扩展" class="headerlink" title="功能扩展"></a>功能扩展</h3><ul><li>可视化界面</li><li>监控系统</li></ul><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>这个项目的开发一路都很顺利，也借这次机会学到了一些东西。还是要去尝试，尝试才能有机会。</p><hr><pre><code class="hljs"></code></pre>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>项目</tag>
      
      <tag>经验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo建站经验</title>
    <link href="/2025/04/02/%E5%BB%BA%E7%AB%99/"/>
    <url>/2025/04/02/%E5%BB%BA%E7%AB%99/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/%E6%8A%BD%E8%B1%A11.jpg"></p><h1 id="一、Hexo-建站完整步骤"><a href="#一、Hexo-建站完整步骤" class="headerlink" title="一、Hexo 建站完整步骤"></a>一、Hexo 建站完整步骤</h1><h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h3><ul><li>安装node.js   我装过，做大一年度项目的时候装的，前后端分离，当时不知道Java和Javaicript不是同一个东西，第一版做的稀烂，用过node.js。那时候该记下来环境怎么配置的。</li><li>安装git  也装过，git bash不好使，我git用的就不熟练，得练，记不住，别再每次使ai查了。</li><li>安装hexo  <code>$ npm install -g hexo-cli</code></li></ul><h3 id="2-初始化"><a href="#2-初始化" class="headerlink" title="2. 初始化"></a>2. 初始化</h3><ul><li><code>hexo init blog</code> <code>npm install</code></li></ul><h3 id="3-配置文件"><a href="#3-配置文件" class="headerlink" title="3. 配置文件"></a>3. 配置文件</h3><ul><li>_config.yml：整体的配置文件，可以在这里选择模板</li><li>package.json：应用程序的信息</li><li>source：资源文件夹。可以用img存放图片，<code>_posts</code>文件夹放所有文章，可以在里面自己建文件夹，比如tech、essays。 除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 &#x2F; 文件夹和隐藏的文件将会被忽略。 Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。确实，比如我在source里建的common.css就被拷贝到了public下的css文件夹里面。</li><li>theme: 我用的fluid，但是我忘了我当时怎么操作的，里面啥也没有，我还是可以用fluid主题。很多配置文件我不知道去哪里改，只能在source里面新建，不过一次也没有生效。</li><li>node_modules：放插件吧，我找不到fluid相关配置文件的时候从这里看到过hexo_theme_fluid，不过ai不建议我修改这里，因为一旦重新下载npm，这里也就重新配置了。</li><li>我经常修改的是_config.fluid.yml,我怀疑是当时跟着某个博客教程把fluid里的配置文件放到根目录里，然后把theme里的文件删掉了。忘了，太久了。</li></ul><h3 id="4-美化"><a href="#4-美化" class="headerlink" title="4. 美化"></a>4. 美化</h3><ul><li>在_config.fluid.yml顺着改就可以了，遇到的主要问题是，我想让导航栏显示我自定义的页面，但是效果不理想。想学学前端。</li><li>做了个小垃圾，不想说话。</li><li>做不下去开始玩手机，发现破罐子破摔非常舒服，逃避有利于心理健康。</li><li>不是不能放下手机，是不愿意打破这种惯性。然后终于把这篇博客写出来了。按照我的尿性，这种东西我会继续找个理由逃避，今天还是做了个垃圾，可喜可贺，再接再厉！</li><li>还是写出来舒服，脏东西吐出来心里就干净了。</li></ul><h3 id="8-1-文章管理"><a href="#8-1-文章管理" class="headerlink" title="8.1 文章管理"></a>8.1 文章管理</h3><ul><li><p>新建文章</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment"># 示例：创建一篇新文章</span><br>hexo new post <span class="hljs-string">&quot;我的第一篇博客&quot;</span><br><br><span class="hljs-comment"># 创建草稿</span><br>hexo new draft <span class="hljs-string">&quot;未完成的文章&quot;</span><br><br><span class="hljs-comment"># 发布草稿</span><br>hexo publish draft <span class="hljs-string">&quot;未完成的文章&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>文章模板</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs markdown">---<br>title: 文章标题<br>date: 2024-04-02 00:00:00<br>category: 技术<br>tags: [标签1, 标签2]<br>cover: /img/cover.jpg<br>toc: true<br><span class="hljs-section">mathjax: false</span><br><span class="hljs-section">---</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="8-2-本地开发"><a href="#8-2-本地开发" class="headerlink" title="8.2 本地开发"></a>8.2 本地开发</h3><ul><li><p>启动本地服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 启动服务器</span><br>hexo server<br>hexo s<br><br><span class="hljs-comment"># 指定端口</span><br>hexo server -p 4000<br>hexo s -p 4000<br><br><span class="hljs-comment"># 启动调试模式</span><br>hexo server --debug<br></code></pre></td></tr></table></figure></li><li><p>生成静态文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 生成静态文件</span><br>hexo generate<br>hexo g<br><br><span class="hljs-comment"># 强制重新生成</span><br>hexo generate --force<br><br><span class="hljs-comment"># 生成时监视文件变动</span><br>hexo generate --watch<br></code></pre></td></tr></table></figure></li></ul><h3 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a>部署到GitHub</h3><ul><li><p>安装部署插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure></li><li><p>配置部署信息（在_config.yml中）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:用户名/用户名.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br>  <span class="hljs-attr">message:</span> <span class="hljs-string">&quot;更新博客&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>部署命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 部署到GitHub</span><br>hexo deploy<br>hexo d<br><br><span class="hljs-comment"># 生成并部署</span><br>hexo deploy --generate<br><br><span class="hljs-comment"># 强制部署</span><br>hexo deploy --force<br></code></pre></td></tr></table></figure></li></ul><h3 id="其他实用命令"><a href="#其他实用命令" class="headerlink" title="其他实用命令"></a>其他实用命令</h3><ul><li><p>清理缓存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean<br></code></pre></td></tr></table></figure></li><li><p>显示帮助信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo <span class="hljs-built_in">help</span><br></code></pre></td></tr></table></figure></li><li><p>显示版本信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo version<br></code></pre></td></tr></table></figure></li></ul><h3 id="常用工作流程"><a href="#常用工作流程" class="headerlink" title="常用工作流程"></a>常用工作流程</h3><ol><li><p>新建文章</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new post <span class="hljs-string">&quot;新文章&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>本地预览</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo server<br></code></pre></td></tr></table></figure></li><li><p>生成静态文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo generate<br></code></pre></td></tr></table></figure></li><li><p>部署到GitHub</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo deploy<br></code></pre></td></tr></table></figure></li><li><p>问题解决</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure></li></ol><h3 id="图片存储"><a href="#图片存储" class="headerlink" title="图片存储"></a>图片存储</h3><h4 id="存储位置"><a href="#存储位置" class="headerlink" title="存储位置"></a>存储位置</h4><ul><li>推荐在 <code>source/img</code> 目录下创建子目录管理图片<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 创建图片目录</span><br><span class="hljs-built_in">mkdir</span> -p <span class="hljs-built_in">source</span>/img/posts<br><span class="hljs-built_in">mkdir</span> -p <span class="hljs-built_in">source</span>/img/cover<br></code></pre></td></tr></table></figure></li></ul><h4 id="插入方法"><a href="#插入方法" class="headerlink" title="插入方法"></a>插入方法</h4><ul><li>方法1：使用Markdown语法</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">![<span class="hljs-string">图片描述</span>](<span class="hljs-link">/img/posts/图片名称.jpg</span>)<br></code></pre></td></tr></table></figure><ul><li>方法2：使用HTML标签（可控制大小）</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/img/posts/图片名称.jpg&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;50%&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;50%&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;图片描述&quot;</span>&gt;</span></span><br></code></pre></td></tr></table></figure><ul><li>方法3：使用Fluid主题的图片标签</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#123;% image /img/posts/图片名称.jpg, width=50%, alt=图片描述 %&#125;<br></code></pre></td></tr></table></figure><h1 id="二、后记"><a href="#二、后记" class="headerlink" title="二、后记"></a>二、后记</h1><ul><li>怎么在不想做的时候做下去，什么也别想，先做，做个垃圾。</li><li>不理想，给它点时间成长。</li><li>这些碎碎念为什么不写到日记里面，跑到这里撒泼打滚，想写别管，能写是福。</li><li>博客可以精美，图片可以丰富，内容可以高质量，个人介绍可以有趣，我看了很多别人的博客，各有各的优点。我的奇怪又简陋，那……这也可以吧。</li><li>写点技术博客？写点随笔？这两个自定义页面需要完善。自定义页面的编辑在哪里进行，怎么样实现文章根据分类自动拷贝到tech和essays文件夹，就像public文件夹一样。</li><li>about页怎么设计，我也整点有意思的，emm……，文学、运动、音乐，我喜欢的这些放上。技术，我不喜欢但是得学的也要放上。怎么排版好看，还是学学前端吧，看着还挺有意思。</li><li>想做一个侧边栏，每次刷新都会更新语录。放我喜欢的诗句、文字，或者自己颠。</li><li>每次都用的命令能不能写成脚本自动上传</li><li>文章中可以有一点醒目的标识</li></ul><blockquote><p>算是建站完成，一月份就尝试过，那时候搭建完成但是很嫌弃，所以什么都没发，现在依然嫌弃，还是捏着鼻子发了。昨天下午大概从四点开始折腾到十二点半，今天早上一个小时左右，折腾的原因是不满意，觉着还有可以优化的地方，但是代码不听我指挥。可以看出我信息检索的能力差，很容易陷入ai的牛角尖，过于依赖ai这种检索方式。决断与规划能力差，有的问题可以先不管，那就果断抛弃不再周旋，先来个“hello world”就好。丢掉完美主义，垃圾就垃圾吧。</p></blockquote><p><img src="/img/%E8%93%9D%E5%A4%A9%E7%B2%89%E8%8A%B1%E5%A5%B3%E5%AD%A9.jpg"></p><hr>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>杂物堆</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WSL、Ubuntu和Vim使用指南</title>
    <link href="/2024/03/21/WSL-Ubuntu-Vim%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <url>/2024/03/21/WSL-Ubuntu-Vim%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h1 id="WSL、Ubuntu和Vim使用指南"><a href="#WSL、Ubuntu和Vim使用指南" class="headerlink" title="WSL、Ubuntu和Vim使用指南"></a>WSL、Ubuntu和Vim使用指南</h1><p>本文将详细介绍如何在Windows系统中使用WSL（Windows Subsystem for Linux）安装Ubuntu，以及如何使用Vim编辑器进行开发。</p><h2 id="1-WSL安装与配置"><a href="#1-WSL安装与配置" class="headerlink" title="1. WSL安装与配置"></a>1. WSL安装与配置</h2><h3 id="1-1-启用WSL功能"><a href="#1-1-启用WSL功能" class="headerlink" title="1.1 启用WSL功能"></a>1.1 启用WSL功能</h3><p>在Windows中启用WSL功能有两种方式：</p><ol><li>使用PowerShell（管理员权限）：</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">dism.exe /online /<span class="hljs-built_in">enable-feature</span> /featurename:Microsoft<span class="hljs-literal">-Windows-Subsystem-Linux</span> /all /norestart<br>dism.exe /online /<span class="hljs-built_in">enable-feature</span> /featurename:VirtualMachinePlatform /all /norestart<br></code></pre></td></tr></table></figure><ol start="2"><li>通过Windows功能：<ul><li>打开”控制面板”</li><li>进入”程序和功能”</li><li>点击”启用或关闭Windows功能”</li><li>勾选”适用于Linux的Windows子系统”</li></ul></li></ol><h3 id="1-2-安装Ubuntu"><a href="#1-2-安装Ubuntu" class="headerlink" title="1.2 安装Ubuntu"></a>1.2 安装Ubuntu</h3><ol><li><p>从Microsoft Store安装Ubuntu：</p><ul><li>打开Microsoft Store</li><li>搜索”Ubuntu”</li><li>选择最新版本（如Ubuntu 22.04 LTS）</li><li>点击”获取”或”安装”</li></ul></li><li><p>首次启动配置：</p><ul><li>启动Ubuntu</li><li>创建用户名和密码</li><li>等待系统初始化完成</li></ul></li></ol><h2 id="2-Ubuntu基础使用"><a href="#2-Ubuntu基础使用" class="headerlink" title="2. Ubuntu基础使用"></a>2. Ubuntu基础使用</h2><h3 id="2-1-系统更新"><a href="#2-1-系统更新" class="headerlink" title="2.1 系统更新"></a>2.1 系统更新</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 更新软件包列表</span><br><span class="hljs-built_in">sudo</span> apt update<br><br><span class="hljs-comment"># 升级已安装的软件包</span><br><span class="hljs-built_in">sudo</span> apt upgrade<br><br><span class="hljs-comment"># 清理不需要的软件包</span><br><span class="hljs-built_in">sudo</span> apt autoremove<br></code></pre></td></tr></table></figure><h3 id="2-2-常用命令"><a href="#2-2-常用命令" class="headerlink" title="2.2 常用命令"></a>2.2 常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看当前目录</span><br><span class="hljs-built_in">pwd</span><br><br><span class="hljs-comment"># 列出文件</span><br><span class="hljs-built_in">ls</span><br><span class="hljs-built_in">ls</span> -l    <span class="hljs-comment"># 详细信息</span><br><span class="hljs-built_in">ls</span> -a    <span class="hljs-comment"># 显示隐藏文件</span><br><br><span class="hljs-comment"># 切换目录</span><br><span class="hljs-built_in">cd</span> /path/to/directory<br><span class="hljs-built_in">cd</span> ..    <span class="hljs-comment"># 返回上级目录</span><br><span class="hljs-built_in">cd</span> ~     <span class="hljs-comment"># 返回家目录</span><br><br><span class="hljs-comment"># 创建目录</span><br><span class="hljs-built_in">mkdir</span> directory_name<br><br><span class="hljs-comment"># 删除文件/目录</span><br><span class="hljs-built_in">rm</span> file_name<br><span class="hljs-built_in">rm</span> -r directory_name    <span class="hljs-comment"># 递归删除目录</span><br></code></pre></td></tr></table></figure><h2 id="3-Vim编辑器使用"><a href="#3-Vim编辑器使用" class="headerlink" title="3. Vim编辑器使用"></a>3. Vim编辑器使用</h2><h3 id="3-1-安装Vim"><a href="#3-1-安装Vim" class="headerlink" title="3.1 安装Vim"></a>3.1 安装Vim</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt install vim<br></code></pre></td></tr></table></figure><h3 id="3-2-Vim基础操作"><a href="#3-2-Vim基础操作" class="headerlink" title="3.2 Vim基础操作"></a>3.2 Vim基础操作</h3><h4 id="3-2-1-模式切换"><a href="#3-2-1-模式切换" class="headerlink" title="3.2.1 模式切换"></a>3.2.1 模式切换</h4><ul><li>普通模式（默认）：按<code>Esc</code>键</li><li>插入模式：按<code>i</code>键</li><li>可视模式：按<code>v</code>键</li><li>命令模式：按<code>:</code>键</li></ul><h4 id="3-2-2-基本命令"><a href="#3-2-2-基本命令" class="headerlink" title="3.2.2 基本命令"></a>3.2.2 基本命令</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs vim"># 文件操作<br>:<span class="hljs-keyword">w</span>          # 保存文件<br>:q          # 退出<br>:<span class="hljs-keyword">wq</span>         # 保存并退出<br>:q!         # 强制退出不保存<br><br># 光标移动<br>h           # 左移<br><span class="hljs-keyword">j</span>           # 下移<br><span class="hljs-keyword">k</span>           # 上移<br><span class="hljs-keyword">l</span>           # 右移<br><span class="hljs-number">0</span>           # 行首<br>$           # 行尾<br>gg          # 文件开头<br>G           # 文件末尾<br><br># 编辑操作<br>dd          # 删除当前行<br>yy          # 复制当前行<br><span class="hljs-keyword">p</span>           # 粘贴<br><span class="hljs-keyword">u</span>           # 撤销<br>Ctrl+r      # 重做<br></code></pre></td></tr></table></figure><h3 id="3-3-Vim配置"><a href="#3-3-Vim配置" class="headerlink" title="3.3 Vim配置"></a>3.3 Vim配置</h3><p>创建或编辑<code>~/.vimrc</code>文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/.vimrc<br></code></pre></td></tr></table></figure><p>常用配置示例：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-comment">&quot; 显示行号</span><br><span class="hljs-keyword">set</span> <span class="hljs-keyword">number</span><br><br><span class="hljs-comment">&quot; 语法高亮</span><br><span class="hljs-keyword">syntax</span> <span class="hljs-keyword">on</span><br><br><span class="hljs-comment">&quot; 自动缩进</span><br><span class="hljs-keyword">set</span> autoindent<br><br><span class="hljs-comment">&quot; 显示匹配的括号</span><br><span class="hljs-keyword">set</span> showmatch<br><br><span class="hljs-comment">&quot; 搜索时忽略大小写</span><br><span class="hljs-keyword">set</span> ignorecase<br><br><span class="hljs-comment">&quot; 设置缩进为4个空格</span><br><span class="hljs-keyword">set</span> tabstop=<span class="hljs-number">4</span><br><span class="hljs-keyword">set</span> <span class="hljs-built_in">shiftwidth</span>=<span class="hljs-number">4</span><br><span class="hljs-keyword">set</span> expandtab<br><br><span class="hljs-comment">&quot; 显示状态行</span><br><span class="hljs-keyword">set</span> laststatus=<span class="hljs-number">2</span><br><br><span class="hljs-comment">&quot; 设置主题</span><br><span class="hljs-keyword">colorscheme</span> desert<br></code></pre></td></tr></table></figure><h2 id="4-开发环境配置"><a href="#4-开发环境配置" class="headerlink" title="4. 开发环境配置"></a>4. 开发环境配置</h2><h3 id="4-1-安装开发工具"><a href="#4-1-安装开发工具" class="headerlink" title="4.1 安装开发工具"></a>4.1 安装开发工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装编译工具</span><br><span class="hljs-built_in">sudo</span> apt install build-essential<br><br><span class="hljs-comment"># 安装Git</span><br><span class="hljs-built_in">sudo</span> apt install git<br><br><span class="hljs-comment"># 安装Python</span><br><span class="hljs-built_in">sudo</span> apt install python3 python3-pip<br><br><span class="hljs-comment"># 安装Node.js</span><br>curl -fsSL https://deb.nodesource.com/setup_lts.x | <span class="hljs-built_in">sudo</span> -E bash -<br><span class="hljs-built_in">sudo</span> apt install nodejs<br></code></pre></td></tr></table></figure><h3 id="4-2-配置Git"><a href="#4-2-配置Git" class="headerlink" title="4.2 配置Git"></a>4.2 配置Git</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 配置用户名和邮箱</span><br>git config --global user.name <span class="hljs-string">&quot;Your Name&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;your.email@example.com&quot;</span><br><br><span class="hljs-comment"># 生成SSH密钥</span><br>ssh-keygen -t rsa -b 4096<br></code></pre></td></tr></table></figure><h2 id="5-实用技巧"><a href="#5-实用技巧" class="headerlink" title="5. 实用技巧"></a>5. 实用技巧</h2><h3 id="5-1-WSL与Windows文件系统互访"><a href="#5-1-WSL与Windows文件系统互访" class="headerlink" title="5.1 WSL与Windows文件系统互访"></a>5.1 WSL与Windows文件系统互访</h3><ul><li>Windows访问WSL文件：<code>\\wsl$\Ubuntu\</code></li><li>WSL访问Windows文件：<code>/mnt/c/</code></li></ul><h3 id="5-2-Vim插件管理"><a href="#5-2-Vim插件管理" class="headerlink" title="5.2 Vim插件管理"></a>5.2 Vim插件管理</h3><p>推荐使用Vim插件管理器（如vim-plug）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装vim-plug</span><br>curl -fLo ~/.vim/autoload/plug.vim --create-dirs \<br>    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim<br></code></pre></td></tr></table></figure><p>在<code>.vimrc</code>中添加插件：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">call</span> plug#begin(<span class="hljs-string">&#x27;~/.vim/plugged&#x27;</span>)<br>Plug <span class="hljs-string">&#x27;preservim/nerdtree&#x27;</span><br>Plug <span class="hljs-string">&#x27;vim-airline/vim-airline&#x27;</span><br>Plug <span class="hljs-string">&#x27;vim-airline/vim-airline-themes&#x27;</span><br><span class="hljs-keyword">call</span> plug#end()<br></code></pre></td></tr></table></figure><p>安装插件：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">:PlugInstall<br></code></pre></td></tr></table></figure><h2 id="6-常见问题解决"><a href="#6-常见问题解决" class="headerlink" title="6. 常见问题解决"></a>6. 常见问题解决</h2><ol><li><p>WSL启动失败</p><ul><li>检查Windows功能是否启用</li><li>重启WSL：<code>wsl --shutdown</code></li><li>重置WSL：<code>wsl --unregister Ubuntu</code></li></ul></li><li><p>Vim中文乱码</p><ul><li>在<code>.vimrc</code>中添加：</li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">set</span> encoding=utf-<span class="hljs-number">8</span><br><span class="hljs-keyword">set</span> fileencoding=utf-<span class="hljs-number">8</span><br><span class="hljs-keyword">set</span> termencoding=utf-<span class="hljs-number">8</span><br></code></pre></td></tr></table></figure></li><li><p>权限问题</p><ul><li>使用<code>sudo</code>执行需要权限的命令</li><li>修改文件权限：<code>chmod</code></li><li>修改文件所有者：<code>chown</code></li></ul></li></ol><h2 id="7-进阶建议"><a href="#7-进阶建议" class="headerlink" title="7. 进阶建议"></a>7. 进阶建议</h2><ol><li><p>使用WSL2而不是WSL1</p><ul><li>更好的性能</li><li>完整的Linux内核</li><li>更好的系统调用兼容性</li></ul></li><li><p>配置WSL的默认版本</p></li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wsl <span class="hljs-literal">--set-default-version</span> <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><ol start="3"><li><p>使用Windows Terminal</p><ul><li>更好的终端体验</li><li>多标签支持</li><li>自定义主题</li></ul></li><li><p>配置Vim为IDE</p><ul><li>使用插件增强功能</li><li>配置代码补全</li><li>设置代码格式化</li></ul></li></ol><p>通过以上配置，你可以在Windows系统中获得接近原生Linux的开发体验。如果遇到问题，欢迎在评论区讨论。 </p>]]></content>
    
    
    
    <tags>
      
      <tag>WSL</tag>
      
      <tag>Ubuntu</tag>
      
      <tag>Vim</tag>
      
      <tag>开发环境</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
