<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>分布式游戏</title>
    <link href="/2025/04/08/%E5%88%86%E5%B8%83%E5%BC%8F%E6%B8%B8%E6%88%8F/"/>
    <url>/2025/04/08/%E5%88%86%E5%B8%83%E5%BC%8F%E6%B8%B8%E6%88%8F/</url>
    
    <content type="html"><![CDATA[<p>我来帮你重新组织博客框架，加入更多关于项目理解和讲解的内容：</p><h1 id="博客框架：从零构建分布式生命游戏系统-我的开发历程"><a href="#博客框架：从零构建分布式生命游戏系统-我的开发历程" class="headerlink" title="博客框架：从零构建分布式生命游戏系统 - 我的开发历程"></a>博客框架：从零构建分布式生命游戏系统 - 我的开发历程</h1><h2 id="1-项目缘起"><a href="#1-项目缘起" class="headerlink" title="1. 项目缘起"></a>1. 项目缘起</h2><h3 id="1-1-为什么选择生命游戏"><a href="#1-1-为什么选择生命游戏" class="headerlink" title="1.1 为什么选择生命游戏"></a>1.1 为什么选择生命游戏</h3><ul><li>生命游戏的魅力：简单规则下的复杂行为</li><li>计算密集型的特性：适合分布式计算</li><li>可视化效果：便于理解和展示</li></ul><h3 id="1-2-从单机到分布式"><a href="#1-2-从单机到分布式" class="headerlink" title="1.2 从单机到分布式"></a>1.2 从单机到分布式</h3><ul><li>单机版的局限性</li><li>分布式计算的必要性</li><li>系统扩展的思考</li></ul><h3 id="1-3-技术选型"><a href="#1-3-技术选型" class="headerlink" title="1.3 技术选型"></a>1.3 技术选型</h3><ul><li>为什么选择Go：并发特性、简洁语法</li><li>为什么选择gRPC：高性能、强类型</li><li>其他技术栈的考虑</li></ul><h2 id="2-系统架构设计"><a href="#2-系统架构设计" class="headerlink" title="2. 系统架构设计"></a>2. 系统架构设计</h2><h3 id="2-1-核心概念"><a href="#2-1-核心概念" class="headerlink" title="2.1 核心概念"></a>2.1 核心概念</h3><ul><li>Broker（代理节点）：任务调度中心</li><li>Worker（工作节点）：计算执行单元</li><li>Client（客户端）：任务提交和结果获取</li><li>Task（任务）：计算单元</li><li>Node（节点）：物理计算资源</li></ul><h3 id="2-2-系统架构图"><a href="#2-2-系统架构图" class="headerlink" title="2.2 系统架构图"></a>2.2 系统架构图</h3><ul><li>整体架构图</li><li>数据流程图</li><li>组件交互图</li></ul><h3 id="2-3-关键设计决策"><a href="#2-3-关键设计决策" class="headerlink" title="2.3 关键设计决策"></a>2.3 关键设计决策</h3><ul><li>为什么选择中心化架构</li><li>任务分配策略</li><li>状态同步机制</li><li>容错设计</li></ul><h2 id="3-核心功能实现"><a href="#3-核心功能实现" class="headerlink" title="3. 核心功能实现"></a>3. 核心功能实现</h2><h3 id="3-1-任务调度系统"><a href="#3-1-任务调度系统" class="headerlink" title="3.1 任务调度系统"></a>3.1 任务调度系统</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-comment">// 任务结构</span><br><span class="hljs-keyword">type</span> Task <span class="hljs-keyword">struct</span> &#123;<br>    ID        <span class="hljs-type">string</span><br>    Grid      [][]<span class="hljs-type">bool</span><br>    Generations <span class="hljs-type">int</span><br>    Status    TaskStatus<br>    Result    [][]<span class="hljs-type">bool</span><br>    CreatedAt time.Time<br>&#125;<br><br><span class="hljs-comment">// 调度器实现</span><br><span class="hljs-keyword">type</span> Scheduler <span class="hljs-keyword">struct</span> &#123;<br>    tasks     <span class="hljs-keyword">chan</span> Task<br>    workers   <span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]*Worker<br>    mu        sync.RWMutex<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-2-负载均衡"><a href="#3-2-负载均衡" class="headerlink" title="3.2 负载均衡"></a>3.2 负载均衡</h3><ul><li>权重计算</li><li>节点选择</li><li>动态调整</li></ul><h3 id="3-3-并发控制"><a href="#3-3-并发控制" class="headerlink" title="3.3 并发控制"></a>3.3 并发控制</h3><ul><li>锁机制</li><li>资源管理</li><li>任务队列</li></ul><h2 id="4-开发历程"><a href="#4-开发历程" class="headerlink" title="4. 开发历程"></a>4. 开发历程</h2><h3 id="4-1-架构设计之痛"><a href="#4-1-架构设计之痛" class="headerlink" title="4.1 架构设计之痛"></a>4.1 架构设计之痛</h3><ul><li>节点通信设计</li><li>任务调度策略</li><li>状态同步方案</li></ul><h3 id="4-2-代码组织之困"><a href="#4-2-代码组织之困" class="headerlink" title="4.2 代码组织之困"></a>4.2 代码组织之困</h3><ul><li>目录结构设计</li><li>代码复用</li><li>接口设计</li></ul><h3 id="4-3-踩过的坑"><a href="#4-3-踩过的坑" class="headerlink" title="4.3 踩过的坑"></a>4.3 踩过的坑</h3><ul><li>连接问题</li><li>并发控制</li><li>错误处理</li></ul><h2 id="5-技术难点突破"><a href="#5-技术难点突破" class="headerlink" title="5. 技术难点突破"></a>5. 技术难点突破</h2><h3 id="5-1-性能优化"><a href="#5-1-性能优化" class="headerlink" title="5.1 性能优化"></a>5.1 性能优化</h3><ul><li>任务分配算法</li><li>数据传输优化</li><li>内存管理</li></ul><h3 id="5-2-可靠性保证"><a href="#5-2-可靠性保证" class="headerlink" title="5.2 可靠性保证"></a>5.2 可靠性保证</h3><ul><li>故障检测</li><li>任务重试</li><li>状态恢复</li></ul><h3 id="5-3-扩展性设计"><a href="#5-3-扩展性设计" class="headerlink" title="5.3 扩展性设计"></a>5.3 扩展性设计</h3><ul><li>动态扩缩容</li><li>负载均衡</li><li>服务发现</li></ul><h2 id="6-项目亮点"><a href="#6-项目亮点" class="headerlink" title="6. 项目亮点"></a>6. 项目亮点</h2><h3 id="6-1-创新设计"><a href="#6-1-创新设计" class="headerlink" title="6.1 创新设计"></a>6.1 创新设计</h3><ul><li>智能负载均衡</li><li>自适应调度</li><li>优雅降级</li></ul><h3 id="6-2-工程实践"><a href="#6-2-工程实践" class="headerlink" title="6.2 工程实践"></a>6.2 工程实践</h3><ul><li>代码质量</li><li>测试覆盖</li><li>文档完善</li></ul><h2 id="7-经验总结"><a href="#7-经验总结" class="headerlink" title="7. 经验总结"></a>7. 经验总结</h2><h3 id="7-1-技术收获"><a href="#7-1-技术收获" class="headerlink" title="7.1 技术收获"></a>7.1 技术收获</h3><ul><li>Go语言实践</li><li>分布式系统设计</li><li>性能优化方法</li></ul><h3 id="7-2-项目反思"><a href="#7-2-项目反思" class="headerlink" title="7.2 项目反思"></a>7.2 项目反思</h3><ul><li>设计决策回顾</li><li>改进方向</li><li>经验教训</li></ul><h2 id="8-未来展望"><a href="#8-未来展望" class="headerlink" title="8. 未来展望"></a>8. 未来展望</h2><h3 id="8-1-功能扩展"><a href="#8-1-功能扩展" class="headerlink" title="8.1 功能扩展"></a>8.1 功能扩展</h3><ul><li>可视化界面</li><li>监控系统</li><li>性能分析</li></ul><h3 id="8-2-技术改进"><a href="#8-2-技术改进" class="headerlink" title="8.2 技术改进"></a>8.2 技术改进</h3><ul><li>架构优化</li><li>性能提升</li><li>可靠性增强</li></ul><h2 id="写作建议："><a href="#写作建议：" class="headerlink" title="写作建议："></a>写作建议：</h2><ol><li>每个部分都加入具体的代码示例</li><li>使用图表说明系统架构和流程</li><li>分享实际遇到的问题和解决方案</li><li>提供性能数据和优化效果</li><li>保持个人风格，突出开发过程中的思考</li></ol><p>需要我详细展开某个部分吗？或者你想了解如何更好地展示某个具体的技术点？</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>hexo建站经验</title>
    <link href="/2025/04/02/%E5%BB%BA%E7%AB%99/"/>
    <url>/2025/04/02/%E5%BB%BA%E7%AB%99/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/%E6%8A%BD%E8%B1%A11.jpg"></p><h1 id="一、Hexo-建站完整步骤"><a href="#一、Hexo-建站完整步骤" class="headerlink" title="一、Hexo 建站完整步骤"></a>一、Hexo 建站完整步骤</h1><h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h3><ul><li>安装node.js   我装过，做大一年度项目的时候装的，前后端分离，当时不知道Java和Javaicript不是同一个东西，第一版做的稀烂，用过node.js。那时候该记下来环境怎么配置的。</li><li>安装git  也装过，git bash不好使，我git用的就不熟练，得练，记不住，别再每次使ai查了。</li><li>安装hexo  <code>$ npm install -g hexo-cli</code></li></ul><h3 id="2-初始化"><a href="#2-初始化" class="headerlink" title="2. 初始化"></a>2. 初始化</h3><ul><li><code>hexo init blog</code> <code>npm install</code></li></ul><h3 id="3-配置文件"><a href="#3-配置文件" class="headerlink" title="3. 配置文件"></a>3. 配置文件</h3><ul><li>_config.yml：整体的配置文件，可以在这里选择模板</li><li>package.json：应用程序的信息</li><li>source：资源文件夹。可以用img存放图片，<code>_posts</code>文件夹放所有文章，可以在里面自己建文件夹，比如tech、essays。 除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 &#x2F; 文件夹和隐藏的文件将会被忽略。 Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。确实，比如我在source里建的common.css就被拷贝到了public下的css文件夹里面。</li><li>theme: 我用的fluid，但是我忘了我当时怎么操作的，里面啥也没有，我还是可以用fluid主题。很多配置文件我不知道去哪里改，只能在source里面新建，不过一次也没有生效。</li><li>node_modules：放插件吧，我找不到fluid相关配置文件的时候从这里看到过hexo_theme_fluid，不过ai不建议我修改这里，因为一旦重新下载npm，这里也就重新配置了。</li><li>我经常修改的是_config.fluid.yml,我怀疑是当时跟着某个博客教程把fluid里的配置文件放到根目录里，然后把theme里的文件删掉了。忘了，太久了。</li></ul><h3 id="4-美化"><a href="#4-美化" class="headerlink" title="4. 美化"></a>4. 美化</h3><ul><li>在_config.fluid.yml顺着改就可以了，遇到的主要问题是，我想让导航栏显示我自定义的页面，但是效果不理想。想学学前端。</li><li>做了个小垃圾，不想说话。</li><li>做不下去开始玩手机，发现破罐子破摔非常舒服，逃避有利于心理健康。</li><li>不是不能放下手机，是不愿意打破这种惯性。然后终于把这篇博客写出来了。按照我的尿性，这种东西我会继续找个理由逃避，今天还是做了个垃圾，可喜可贺，再接再厉！</li><li>还是写出来舒服，脏东西吐出来心里就干净了。</li></ul><h3 id="8-1-文章管理"><a href="#8-1-文章管理" class="headerlink" title="8.1 文章管理"></a>8.1 文章管理</h3><ul><li><p>新建文章</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment"># 示例：创建一篇新文章</span><br>hexo new post <span class="hljs-string">&quot;我的第一篇博客&quot;</span><br><br><span class="hljs-comment"># 创建草稿</span><br>hexo new draft <span class="hljs-string">&quot;未完成的文章&quot;</span><br><br><span class="hljs-comment"># 发布草稿</span><br>hexo publish draft <span class="hljs-string">&quot;未完成的文章&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>文章模板</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs markdown">---<br>title: 文章标题<br>date: 2024-04-02 00:00:00<br>category: 技术<br>tags: [标签1, 标签2]<br>cover: /img/cover.jpg<br>toc: true<br><span class="hljs-section">mathjax: false</span><br><span class="hljs-section">---</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="8-2-本地开发"><a href="#8-2-本地开发" class="headerlink" title="8.2 本地开发"></a>8.2 本地开发</h3><ul><li><p>启动本地服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 启动服务器</span><br>hexo server<br>hexo s<br><br><span class="hljs-comment"># 指定端口</span><br>hexo server -p 4000<br>hexo s -p 4000<br><br><span class="hljs-comment"># 启动调试模式</span><br>hexo server --debug<br></code></pre></td></tr></table></figure></li><li><p>生成静态文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 生成静态文件</span><br>hexo generate<br>hexo g<br><br><span class="hljs-comment"># 强制重新生成</span><br>hexo generate --force<br><br><span class="hljs-comment"># 生成时监视文件变动</span><br>hexo generate --watch<br></code></pre></td></tr></table></figure></li></ul><h3 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a>部署到GitHub</h3><ul><li><p>安装部署插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure></li><li><p>配置部署信息（在_config.yml中）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:用户名/用户名.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br>  <span class="hljs-attr">message:</span> <span class="hljs-string">&quot;更新博客&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>部署命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 部署到GitHub</span><br>hexo deploy<br>hexo d<br><br><span class="hljs-comment"># 生成并部署</span><br>hexo deploy --generate<br><br><span class="hljs-comment"># 强制部署</span><br>hexo deploy --force<br></code></pre></td></tr></table></figure></li></ul><h3 id="其他实用命令"><a href="#其他实用命令" class="headerlink" title="其他实用命令"></a>其他实用命令</h3><ul><li><p>清理缓存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean<br></code></pre></td></tr></table></figure></li><li><p>显示帮助信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo <span class="hljs-built_in">help</span><br></code></pre></td></tr></table></figure></li><li><p>显示版本信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo version<br></code></pre></td></tr></table></figure></li></ul><h3 id="常用工作流程"><a href="#常用工作流程" class="headerlink" title="常用工作流程"></a>常用工作流程</h3><ol><li><p>新建文章</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new post <span class="hljs-string">&quot;新文章&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>本地预览</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo server<br></code></pre></td></tr></table></figure></li><li><p>生成静态文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo generate<br></code></pre></td></tr></table></figure></li><li><p>部署到GitHub</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo deploy<br></code></pre></td></tr></table></figure></li><li><p>问题解决</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure></li></ol><h3 id="图片存储"><a href="#图片存储" class="headerlink" title="图片存储"></a>图片存储</h3><h4 id="存储位置"><a href="#存储位置" class="headerlink" title="存储位置"></a>存储位置</h4><ul><li>推荐在 <code>source/img</code> 目录下创建子目录管理图片<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 创建图片目录</span><br><span class="hljs-built_in">mkdir</span> -p <span class="hljs-built_in">source</span>/img/posts<br><span class="hljs-built_in">mkdir</span> -p <span class="hljs-built_in">source</span>/img/cover<br></code></pre></td></tr></table></figure></li></ul><h4 id="插入方法"><a href="#插入方法" class="headerlink" title="插入方法"></a>插入方法</h4><ul><li>方法1：使用Markdown语法</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">![<span class="hljs-string">图片描述</span>](<span class="hljs-link">/img/posts/图片名称.jpg</span>)<br></code></pre></td></tr></table></figure><ul><li>方法2：使用HTML标签（可控制大小）</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/img/posts/图片名称.jpg&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;50%&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;50%&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;图片描述&quot;</span>&gt;</span></span><br></code></pre></td></tr></table></figure><ul><li>方法3：使用Fluid主题的图片标签</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#123;% image /img/posts/图片名称.jpg, width=50%, alt=图片描述 %&#125;<br></code></pre></td></tr></table></figure><h1 id="二、后记"><a href="#二、后记" class="headerlink" title="二、后记"></a>二、后记</h1><ul><li>怎么在不想做的时候做下去，什么也别想，先做，做个垃圾。</li><li>不理想，给它点时间成长。</li><li>这些碎碎念为什么不写到日记里面，跑到这里撒泼打滚，想写别管，能写是福。</li><li>博客可以精美，图片可以丰富，内容可以高质量，个人介绍可以有趣，我看了很多别人的博客，各有各的优点。我的奇怪又简陋，那……这也可以吧。</li><li>写点技术博客？写点随笔？这两个自定义页面需要完善。自定义页面的编辑在哪里进行，怎么样实现文章根据分类自动拷贝到tech和essays文件夹，就像public文件夹一样。</li><li>about页怎么设计，我也整点有意思的，emm……，文学、运动、音乐，我喜欢的这些放上。技术，我不喜欢但是得学的也要放上。怎么排版好看，还是学学前端吧，看着还挺有意思。</li><li>想做一个侧边栏，每次刷新都会更新语录。放我喜欢的诗句、文字，或者自己颠。</li><li>每次都用的命令能不能写成脚本自动上传</li><li>文章中可以有一点醒目的标识</li></ul><blockquote><p>算是建站完成，一月份就尝试过，那时候搭建完成但是很嫌弃，所以什么都没发，现在依然嫌弃，还是捏着鼻子发了。昨天下午大概从四点开始折腾到十二点半，今天早上一个小时左右，折腾的原因是不满意，觉着还有可以优化的地方，但是代码不听我指挥。可以看出我信息检索的能力差，很容易陷入ai的牛角尖，过于依赖ai这种检索方式。决断与规划能力差，有的问题可以先不管，那就果断抛弃不再周旋，先来个“hello world”就好。丢掉完美主义，垃圾就垃圾吧。</p></blockquote><p><img src="/img/%E8%93%9D%E5%A4%A9%E7%B2%89%E8%8A%B1%E5%A5%B3%E5%AD%A9.jpg"></p><hr>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>杂物堆</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
